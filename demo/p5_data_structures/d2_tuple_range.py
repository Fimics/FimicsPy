"""
输出时，元组都要由圆括号标注，这样才能正确地解释嵌套元组。输入时，圆括号可有可无，不过经常是必须的（如果元组是更大的表达式的一部分）。不允许为元组中的单个元素赋值，当然，可以创建含列表等可变对象的元组。

虽然，元组与列表很像，但使用场景不同，用途也不同。元组是 immutable （不可变的），一般可包含异质元素序列，通过解包（见本节下文）或索引访问
"""
t = 12345, 54321, 'hello!'
print(t[0])
print(t)

u = t, (1, 2, 3, 4, 5)
print(u)

#  元组是不可变对象： 但它们可以包含可变对象：

"""
构造 0 个或 1 个元素的元组比较特殊：为了适应这种情况，对句法有一些额外的改变。用一对空圆括号就可以创建空元组；
只有一个元素的元组可以通过在这个元素后添加逗号来构建（圆括号里只有一个值的话不够明确）。丑陋，但是有效。例如：
"""
empty = ()
singleton = 'hello',

print(len(empty))
print(len(singleton))
print(singleton)

x, y, z = t
# 语句 t = 12345, 54321, 'hello!' 是 元组打包 的例子：值 12345, 54321 和 'hello!' 一起被打包进元组。逆操作也可以：
print(x, y, z)

if __name__ == '__main__':
    pass